# Sample Jump Program
#
# Tests the Jump Script Interpreter
#
# Author:  Anshul Kharbanda
# Created: 7 - 15 - 2016

# Defining a constant
const PI = 3.1415926535897932

# Defining variables
var variable
var increment
var name = "Jamie Oliver" # Initializing with a value

state start
	# Testing printing
	print "Good afternoon world"
	print "I am Chef Gordon Ramsay"
	print "And I like cat food"
	print variable == Null

	# Test transition
	to first

state first
	# Test Number print
	print 32 # Integer
	print 64.332 # Float
	print # Test null print
	to second

state second
	# Test arithmetic
	print 3 + 2
	print "I am " + name
	print "The number is " + 3
	print 2 * 3 - (4 + 7) / 2 * 5 % 6

	# Test variable setting
	variable = 5
	print variable

	# Transition
	to fourth

state fourth
	# Test variable persistence
	print variable

	# Test constant
	print "The value of PI is " + PI
	print

	# Transition
	to fifth

state fifth
	# Test different value types
	print "Int8:             " + 23i8
	print "UInt16:           " + 24u16
	print "Float32:          " + 123e10f32
	print "Sum of UInt8:     " + (255u8  + 8u8)  # 7
	print "Sum of Int8:      " + (127i8  + 5i8)  # 124
	print "Sum of Int16:     " + (127i16 + 5u8)  # 132
	print "Sum of Int16 (2): " + (127i8  + 5u16) # 132
	print "Negative number:  " + -2

	# Transition
	to sixth

state sixth
	# Print message
	print "All of these should be true"

	# Test comparision
	print 7 > 3
	print 5 == 5
	print 5 != 4
	print 7 + 3 <= 10

	# Test and / or / not expressions
	print True and True
	print False or True
	print not False
	print not (False or True and not True)

	# Test conditioned transition
	to seventh_a if 4 > 5
	to seventh_b otherwise

state seventh_a
	# Print state title
	print "Seventh A? This shouldn't happen!"

state seventh_b
	# Prompt name
	print "Enter your name:" to STDPromptStream
	read name

	# Print output
	print "Hello, " + name + "!"

	# Transition based on input
	to eigth_a if name == "Anshul"
	to eigth_b if name == "John Cena"
	to eigth_c otherwise

state eigth_a
	# Print welcome back message
	print "Welcome back!"
	to ninth

state eigth_b
	# Print funny John Cena reference
	print "Sorry. I can't see you!"
	to ninth

state eigth_c
	# Print default welcome message
	print "Welcome!"
	to ninth

state ninth
	# Print message for next state
	print "The next state should run 5 times"

	# Set variable to 0
	variable = 0

	# To tenth
	to tenth

state tenth
	# Print running message
	print "Running state ten"

	# Increment
	variable = variable + 1

	# Loop if less than 5 times else to end
	loop if variable < 5
	to increment otherwise

state increment
	# Print initial message
	print "The variable should successfuly increment to 3 using increment operator"

	# Set both variable to 0
	variable = 0
	increment = 0

	# Go to loop state
	to increment_loop

state increment_loop
	# Print running message
	print "Variable: " + increment

	# increment variable
	variable = variable + 1
	increment++

	# Loop if variable is less than 5
	loop if increment < 3 and variable < 5
	to increment_verify otherwise

state increment_verify
	# Verify if increment works
	to increment_success if increment == 3
	to increment_failed otherwise

state increment_success
	# Increment works
	print "Increment works!"
	print "Final: " + increment

	# Transition to decrement
	to decrement

state increment_failed
	# Increment does not work
	print "Increment does not work!"
	print "Final: " + increment

	# Transition to decrement
	to decrement

state decrement
	# Print initial message
	print "The variable should successfuly decrement to 0 using decrement operator"

	# Initialize variables
	variable  = 0
	increment = 3

	# To loop state
	to decrement_loop

state decrement_loop
	# Loop decrement
	print "Variable: " + increment

	# Increment variables
	variable = variable + 1
	increment--

	# Loop
	loop if increment > 0 and variable < 5
	to decrement_verify otherwise

state decrement_verify
	# Verify if increment works
	to decrement_success if increment == 0
	to decrement_failed otherwise

state decrement_success
	# Decrement success
	print "Decrement works!"
	print "Final: " + increment

state decrement_failed
	# Decrement failure
	print "Decrement does not work!"
	print "Final: " + increment
